{"version":3,"sources":["assets/logo.svg","utils/_DATA.js","actions/actionTypes.js","actions/authedUser.js","actions/shared.js","actions/users.js","actions/questions.js","components/SiteWrapper.js","components/Home.js","components/Leaderboard.js","components/QuestionAnswer.js","components/QuestionResult.js","components/NoMatch.js","components/Question.js","components/QuestionNew.js","components/Login.js","components/App.js","reducers/users.js","reducers/questions.js","reducers/index.js","reducers/authedUser.js","middleware/logger.js","middleware/index.js","index.js"],"names":["module","exports","users","cangir","id","name","avatarURL","answers","am8ehyc8byjqgar0jgpub9","loxhs1bqm25b708cmbf3g","questions","sarahedo","tylermcginnis","vthrdm985a262al8qx3do","xj352vofupe1dqz9emx13r","johndoe","author","timestamp","optionOne","votes","text","optionTwo","_saveQuestion","question","Promise","res","rej","authedUser","formattedQuestion","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","formatQuestion","setTimeout","concat","SET_AUTHED_USER","RECEIVE_QUESTIONS","ADD_QUESTION","SAVE_QUESTION_ANSWER","RECEIVE_USERS","ADD_QUESTION_TO_AUTHED_USER","SAVE_QUESTION_ANSWER_TO_AUTHED_USER","setAuthedUser","localStorage","setItem","type","AUTHED_ID","getItem","handleInitialData","dispatch","all","then","values","handleAddQuestion","getState","addQuestion","addQuestionToAuthedUser","handleSaveQuestionAnswer","answer","qid","_saveQuestionAnswer","saveQuestionAnswer","saveQuestionAnswerToAuthedUser","SiteWrapper","logout","props","history","push","login","loginLink","this","navBarItems","value","to","icon","LinkComponent","NavLink","useExact","accountDropdownOptions","description","options","onClick","className","Wrapper","headerProps","alt","imageURL","logo","navItems","Item","href","target","outline","size","RootComponent","color","accountDropdown","navProps","itemsObjects","footerProps","copyright","Fragment","nav","Col","auto","Row","sm","md","offsetMd","lg","offsetLg","children","Component","withRouter","connect","UNANSWERED","ANSWERED","Home","state","questionList","changeQuestionList","e","textContent","toLowerCase","includes","setState","answered","unanswered","Content","aria-selected","map","key","xs","Body","src","myTimestamp","ReactTimeAgo","date","pathname","sort","a","b","getTime","Object","keys","assign","filter","userObj","user","length","score","Header","Title","cards","striped","responsive","ColHeader","alignContent","colSpan","QuestionAnswer","option","showAlert","preventDefault","onChange","handleChange","onSubmit","handleSubmit","Group","label","SwitchStack","Switch","QuestionResult","totalVotes","selected","toFixed","Small","muted","Bar","width","NoMatch","Question","questionAnswered","match","params","QuestionNew","redirect","authedUserName","Input","placeholder","disabled","one","two","Login","changeUser","event","authorizeUser","prevRouterPath","undefined","location","previous","autoComplete","Select","default","defaultValue","block","center","loggedIn","PrivateRoute","component","rest","render","App","loading","exact","path","Leaderboard","action","combineReducers","logger","store","next","console","group","log","returnValue","groupEnd","applyMiddleware","thunk","JavascriptTimeAgo","locale","en","createStore","reducer","middleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e217297e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.d01c6036.svg\";","let users = {\n  cangir: {\n    id: \"cangir\",\n    name: \"Ahmet Cangir\",\n    avatarURL:\n      \"https://cangir.github.io/udacity-reactnd-would-you-rather/img/man-1.svg\",\n    answers: {\n      \"8xf0y6ziyjabvozdd253nd\": \"optionOne\",\n      \"6ni6ok3ym7mf1p33lnez\": \"optionTwo\",\n      am8ehyc8byjqgar0jgpub9: \"optionTwo\",\n      loxhs1bqm25b708cmbf3g: \"optionOne\"\n    },\n    questions: [\"8xf0y6ziyjacvozdd253nd\", \"8xf0y6ziyjacaozdd253nd\"]\n  },\n  sarahedo: {\n    id: \"sarahedo\",\n    name: \"Sarah Edo\",\n    avatarURL:\n      \"https://cangir.github.io/udacity-reactnd-would-you-rather/img/girl.svg\",\n    answers: {\n      \"8xf0y6ziyjabvozdd253nd\": \"optionOne\",\n      \"6ni6ok3ym7mf1p33lnez\": \"optionOne\",\n      am8ehyc8byjqgar0jgpub9: \"optionTwo\",\n      loxhs1bqm25b708cmbf3g: \"optionTwo\"\n    },\n    questions: [\"8xf0y6ziyjabvozdd253nd\", \"am8ehyc8byjqgar0jgpub9\"]\n  },\n  tylermcginnis: {\n    id: \"tylermcginnis\",\n    name: \"Tyler McGinnis\",\n    avatarURL:\n      \"https://cangir.github.io/udacity-reactnd-would-you-rather/img/boy-1.svg\",\n    answers: {\n      vthrdm985a262al8qx3do: \"optionOne\",\n      xj352vofupe1dqz9emx13r: \"optionTwo\"\n    },\n    questions: [\"loxhs1bqm25b708cmbf3g\", \"vthrdm985a262al8qx3do\"]\n  },\n  johndoe: {\n    id: \"johndoe\",\n    name: \"John Doe\",\n    avatarURL:\n      \"https://cangir.github.io/udacity-reactnd-would-you-rather/img/boy.svg\",\n    answers: {\n      xj352vofupe1dqz9emx13r: \"optionOne\",\n      vthrdm985a262al8qx3do: \"optionTwo\",\n      \"6ni6ok3ym7mf1p33lnez\": \"optionOne\"\n    },\n    questions: [\"6ni6ok3ym7mf1p33lnez\", \"xj352vofupe1dqz9emx13r\"]\n  }\n};\n\nlet questions = {\n  \"8xf0y6ziyjacvozdd253nd\": {\n    id: \"8xf0y6ziyjacvozdd253nd\",\n    author: \"cangir\",\n    timestamp: 1572599686000,\n    optionOne: {\n      votes: [\"cangir\", \"tylermcginnis\"],\n      text: \"be a React developer\"\n    },\n    optionTwo: {\n      votes: [\"sarahedo\"],\n      text: \"be an Angular developer\"\n    }\n  },\n  \"8xf0y6ziyjacaozdd253nd\": {\n    id: \"8xf0y6ziyjacaozdd253nd\",\n    author: \"cangir\",\n    timestamp: 1572598876000,\n    optionOne: {\n      votes: [\"cangir\"],\n      text: \"be a Python developer\"\n    },\n    optionTwo: {\n      votes: [\"sarahedo\"],\n      text: \"be an Java developer\"\n    }\n  },\n  \"8xf0y6ziyjabvozdd253nd\": {\n    id: \"8xf0y6ziyjabvozdd253nd\",\n    author: \"sarahedo\",\n    timestamp: 1572598886000,\n    optionOne: {\n      votes: [\"sarahedo\"],\n      text: \"have horrible short term memory\"\n    },\n    optionTwo: {\n      votes: [],\n      text: \"have horrible long term memory\"\n    }\n  },\n  \"6ni6ok3ym7mf1p33lnez\": {\n    id: \"6ni6ok3ym7mf1p33lnez\",\n    author: \"johndoe\",\n    timestamp: 1572338016000,\n    optionOne: {\n      votes: [],\n      text: \"become a superhero\"\n    },\n    optionTwo: {\n      votes: [\"johndoe\", \"sarahedo\"],\n      text: \"become a supervillian\"\n    }\n  },\n  am8ehyc8byjqgar0jgpub9: {\n    id: \"am8ehyc8byjqgar0jgpub9\",\n    author: \"sarahedo\",\n    timestamp: 1572338916000,\n    optionOne: {\n      votes: [],\n      text: \"be telekinetic\"\n    },\n    optionTwo: {\n      votes: [\"sarahedo\"],\n      text: \"be telepathic\"\n    }\n  },\n  loxhs1bqm25b708cmbf3g: {\n    id: \"loxhs1bqm25b708cmbf3g\",\n    author: \"tylermcginnis\",\n    timestamp: 1572395863000,\n    optionOne: {\n      votes: [],\n      text: \"be a front-end developer\"\n    },\n    optionTwo: {\n      votes: [\"sarahedo\"],\n      text: \"be a back-end developer\"\n    }\n  },\n  vthrdm985a262al8qx3do: {\n    id: \"vthrdm985a262al8qx3do\",\n    author: \"tylermcginnis\",\n    timestamp: 1572338716000,\n    optionOne: {\n      votes: [\"tylermcginnis\"],\n      text: \"find $50 yourself\"\n    },\n    optionTwo: {\n      votes: [\"johndoe\"],\n      text: \"have your best friend find $500\"\n    }\n  },\n  xj352vofupe1dqz9emx13r: {\n    id: \"xj352vofupe1dqz9emx13r\",\n    author: \"johndoe\",\n    timestamp: 1572336016000,\n    optionOne: {\n      votes: [\"johndoe\"],\n      text: \"write JavaScript\"\n    },\n    optionTwo: {\n      votes: [\"tylermcginnis\"],\n      text: \"write Swift\"\n    }\n  }\n};\n\nfunction generateUID() {\n  return (\n    Math.random()\n      .toString(36)\n      .substring(2, 15) +\n    Math.random()\n      .toString(36)\n      .substring(2, 15)\n  );\n}\n\nexport function _getUsers() {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({ ...users }), 1000);\n  });\n}\n\nexport function _getQuestions() {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({ ...questions }), 1000);\n  });\n}\n\nfunction formatQuestion({ optionOneText, optionTwoText, author }) {\n  return {\n    id: generateUID(),\n    timestamp: Date.now(),\n    author,\n    optionOne: {\n      votes: [],\n      text: optionOneText\n    },\n    optionTwo: {\n      votes: [],\n      text: optionTwoText\n    }\n  };\n}\n\nexport function _saveQuestion(question) {\n  return new Promise((res, rej) => {\n    const authedUser = question.author;\n    const formattedQuestion = formatQuestion(question);\n\n    setTimeout(() => {\n      questions = {\n        ...questions,\n        [formattedQuestion.id]: formattedQuestion\n      };\n\n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          questions: users[authedUser].questions.concat([formattedQuestion.id])\n        }\n      };\n\n      res(formattedQuestion);\n    }, 1000);\n  });\n}\n\nexport function _saveQuestionAnswer({ authedUser, qid, answer }) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          answers: {\n            ...users[authedUser].answers,\n            [qid]: answer\n          }\n        }\n      };\n\n      questions = {\n        ...questions,\n        [qid]: {\n          ...questions[qid],\n          [answer]: {\n            ...questions[qid][answer],\n            votes: questions[qid][answer].votes.concat([authedUser])\n          }\n        }\n      };\n\n      res();\n    }, 500);\n  });\n}\n","// authedUser\nexport const SET_AUTHED_USER = \"SET_AUTHED_USER\";\n\n// questions\nexport const RECEIVE_QUESTIONS = \"RECEIVE_QUESTIONS\";\nexport const ADD_QUESTION = \"ADD_QUESTION\";\nexport const SAVE_QUESTION_ANSWER = \"SAVE_QUESTION_ANSWER\";\n\n// users\nexport const RECEIVE_USERS = \"RECEIVE_USERS\";\nexport const ADD_QUESTION_TO_AUTHED_USER = \"ADD_QUESTION_TO_AUTHED_USER\";\nexport const SAVE_QUESTION_ANSWER_TO_AUTHED_USER =\n  \"SAVE_QUESTION_ANSWER_TO_AUTHED_USER\";\n","import { SET_AUTHED_USER } from \"./actionTypes\";\n\nexport function setAuthedUser(id) {\n  localStorage.setItem(\"loggedInUser\", id);\n  return {\n    type: SET_AUTHED_USER,\n    id\n  };\n}\n","import {\n  _getUsers,\n  _getQuestions,\n  _saveQuestion,\n  _saveQuestionAnswer\n} from \"../utils/_DATA\";\nimport {\n  receiveUsers,\n  addQuestionToAuthedUser,\n  saveQuestionAnswerToAuthedUser\n} from \"./users\";\nimport { receiveQuestions, addQuestion, saveQuestionAnswer } from \"./questions\";\nimport { setAuthedUser } from \"./authedUser\";\n\nlet AUTHED_ID = localStorage.getItem(\"loggedInUser\");\nif (AUTHED_ID === \"null\") {\n  AUTHED_ID = null;\n}\n\nexport function handleInitialData() {\n  return dispatch => {\n    return Promise.all([_getUsers(), _getQuestions()]).then(values => {\n      dispatch(receiveUsers(values[0]));\n      dispatch(receiveQuestions(values[1]));\n      dispatch(setAuthedUser(AUTHED_ID));\n    });\n  };\n}\n\nexport function handleAddQuestion(optionOneText, optionTwoText) {\n  return (dispatch, getState) => {\n    const { authedUser } = getState();\n\n    return _saveQuestion({\n      author: authedUser,\n      optionOneText,\n      optionTwoText\n    }).then(question => {\n      dispatch(addQuestion(question));\n      dispatch(addQuestionToAuthedUser(authedUser, question.id));\n    });\n  };\n}\n\nexport function handleSaveQuestionAnswer(id, answer) {\n  return (dispatch, getState) => {\n    const { authedUser } = getState();\n\n    return _saveQuestionAnswer({\n      authedUser,\n      qid: id,\n      answer\n    })\n      .then(dispatch(saveQuestionAnswer(id, answer, authedUser)))\n      .then(dispatch(saveQuestionAnswerToAuthedUser(authedUser, id, answer)));\n  };\n}\n","import {\n  RECEIVE_USERS,\n  ADD_QUESTION_TO_AUTHED_USER,\n  SAVE_QUESTION_ANSWER_TO_AUTHED_USER\n} from \"./actionTypes\";\n\nexport function receiveUsers(users) {\n  return {\n    type: RECEIVE_USERS,\n    users\n  };\n}\n\nexport function addQuestionToAuthedUser(authedUser, id) {\n  return {\n    type: ADD_QUESTION_TO_AUTHED_USER,\n    authedUser,\n    id\n  };\n}\n\nexport function saveQuestionAnswerToAuthedUser(authedUser, id, answer) {\n  return {\n    type: SAVE_QUESTION_ANSWER_TO_AUTHED_USER,\n    authedUser,\n    id,\n    answer\n  };\n}\n","import {\n  RECEIVE_QUESTIONS,\n  ADD_QUESTION,\n  SAVE_QUESTION_ANSWER\n} from \"./actionTypes\";\n\nexport function receiveQuestions(questions) {\n  return {\n    type: RECEIVE_QUESTIONS,\n    questions\n  };\n}\n\nexport function addQuestion(question) {\n  return {\n    type: ADD_QUESTION,\n    question\n  };\n}\n\nexport function saveQuestionAnswer(id, answer, authedUser) {\n  return {\n    type: SAVE_QUESTION_ANSWER,\n    id,\n    answer,\n    authedUser\n  };\n}\n","import React, { Component } from \"react\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setAuthedUser } from \"../actions/authedUser\";\nimport logo from \"../assets/logo.svg\";\n\nimport { Site, Nav, Grid, List, Button } from \"tabler-react\";\n\nclass SiteWrapper extends Component {\n  logout = () => {\n    this.props.dispatch(setAuthedUser(null));\n    // When user is logged out, return to the signin page\n    this.props.history.push(\"/\");\n  };\n\n  login = () => {\n    this.props.history.push(\"/login\");\n  };\n\n  render() {\n    const { authedUser, users } = this.props;\n\n    const navBarItems = authedUser\n      ? [\n          {\n            value: \"Home\",\n            to: \"/\",\n            icon: \"home\",\n            LinkComponent: NavLink,\n            useExact: true\n          },\n          {\n            value: \"Leaderboard\",\n            to: \"/leaderboard\",\n            icon: \"award\",\n            LinkComponent: NavLink,\n            useExact: true\n          },\n          {\n            value: \"Add Question\",\n            to: \"/add\",\n            icon: \"plus-circle\",\n            LinkComponent: NavLink,\n            useExact: true\n          }\n        ]\n      : [];\n\n    const accountDropdownOptions = authedUser\n      ? {\n          avatarURL: users[authedUser].avatarURL,\n          name: users[authedUser].name,\n          description: users[authedUser].id,\n          options: [\n            {\n              icon: \"help-circle\",\n              value: \"Need help?\",\n              to:\n                \"https://github.com/cangir/udacity-reactnd-would-you-rather#introduction\"\n            },\n            { icon: \"log-out\", value: \"Sign Out\", onClick: () => this.logout() }\n          ]\n        }\n      : false;\n\n    let loginLink;\n\n    if (!authedUser) {\n      loginLink = (\n        <NavLink to=\"login\" className=\"nav-item font-weight-bold text-dark\">\n          SIGN IN\n        </NavLink>\n      );\n    } else {\n      loginLink = false;\n    }\n\n    return (\n      <Site.Wrapper\n        headerProps={{\n          alt: \"Would You Rather?\",\n          imageURL: logo,\n          navItems: (\n            <Nav.Item type=\"div\" className=\"d-none d-md-flex\">\n              <Button\n                href=\"https://github.com/cangir/udacity-reactnd-would-you-rather\"\n                target=\"_blank\"\n                outline\n                size=\"sm\"\n                RootComponent=\"a\"\n                color=\"dark\"\n              >\n                Source code\n              </Button>\n              {loginLink}\n            </Nav.Item>\n          ),\n          accountDropdown: accountDropdownOptions\n        }}\n        navProps={{ itemsObjects: navBarItems }}\n        footerProps={{\n          copyright: (\n            <React.Fragment>\n              Copyright © 2019. All rights reserved.\n            </React.Fragment>\n          ),\n          nav: (\n            <React.Fragment>\n              <Grid.Col auto={true}>\n                <List className=\"list-inline list-inline-dots mb-0\">\n                  <List.Item className=\"list-inline-item\">\n                    <a href=\"https://github.com/cangir/udacity-reactnd-would-you-rather#introduction\">\n                      Documentation\n                    </a>\n                  </List.Item>\n                  <List.Item className=\"list-inline-item\">\n                    <a href=\"https://github.com/cangir/udacity-reactnd-would-you-rather/issues\">\n                      Issues\n                    </a>\n                  </List.Item>\n                </List>\n              </Grid.Col>\n              <Grid.Col auto={true}>\n                <Button\n                  href=\"https://github.com/cangir/udacity-reactnd-would-you-rather\"\n                  size=\"sm\"\n                  outline\n                  color=\"primary\"\n                  RootComponent=\"a\"\n                >\n                  Source code\n                </Button>\n              </Grid.Col>\n            </React.Fragment>\n          )\n        }}\n      >\n        <div className=\"my-3 my-md-5\">\n          <div className=\"container\">\n            <Grid.Row>\n              <Grid.Col sm={12} md={10} offsetMd={1} lg={8} offsetLg={2}>\n                {this.props.children}\n              </Grid.Col>\n            </Grid.Row>\n          </div>\n        </div>\n      </Site.Wrapper>\n    );\n  }\n}\n\nfunction mapStateToProps({ authedUser, users }) {\n  return {\n    authedUser: authedUser,\n    users: users\n  };\n}\n\nexport default withRouter(connect(mapStateToProps)(SiteWrapper));\n","import React, { Component } from \"react\";\nimport { Redirect, withRouter, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Button, Page, Card, Grid, Text } from \"tabler-react\";\nimport ReactTimeAgo from \"react-time-ago\";\n\n// Components\nimport SiteWrapper from \"./SiteWrapper\";\n\nconst RESULTS = \"results\";\nconst POLL = \"poll\";\nconst UNANSWERED = \"unanswered\";\nconst ANSWERED = \"answered\";\n\nfunction humantime(myTimestamp) {\n  return <ReactTimeAgo date={myTimestamp} />;\n}\n\nclass Home extends Component {\n  state = {\n    questionList: UNANSWERED\n  };\n\n  changeQuestionList = e => {\n    if (!e.target.textContent.toLowerCase().includes(UNANSWERED)) {\n      this.setState({ questionList: ANSWERED });\n    } else {\n      this.setState({ questionList: UNANSWERED });\n    }\n  };\n\n  render() {\n    const { questions, users, authedUser, answered, unanswered } = this.props;\n\n    // Redirect to login Page if not logged in\n    if (!authedUser) {\n      return <Redirect to=\"/login\" />;\n    }\n\n    return (\n      <SiteWrapper>\n        <Page.Content>\n          <Grid.Row>\n            <Grid.Col lg={6}>\n              <Button\n                className=\"btn-primary btn-block mb-4\"\n                aria-selected={\n                  this.state.questionList === UNANSWERED ? \"true\" : \"false\"\n                }\n                onClick={this.changeQuestionList}\n              >\n                Unanswered Questions\n              </Button>\n            </Grid.Col>\n            <Grid.Col lg={6}>\n              <Button\n                className=\"btn-success btn-block mb-4\"\n                aria-selected={\n                  this.state.questionList === ANSWERED ? \"true\" : \"false\"\n                }\n                onClick={this.changeQuestionList}\n              >\n                Answered Questions\n              </Button>\n            </Grid.Col>\n          </Grid.Row>\n          <Grid.Row>\n            {(this.state.questionList === UNANSWERED\n              ? unanswered\n              : answered\n            ).map(answer => (\n              <Grid.Col\n                key={questions[answer].id}\n                xs={12}\n                sm={12}\n                md={12}\n                lg={12}\n              >\n                <Card className=\"card card-profile\">\n                  <div className=\"card-header bg-dark text-center\">\n                    <Text className=\"h3 text-white mx-auto mb-5\">\n                      {users[questions[answer].author].name}\n                    </Text>\n                  </div>\n                  <Card.Body className=\"card-body text-center\">\n                    <img\n                      alt=\"\"\n                      className=\"card-profile-img\"\n                      src={users[questions[answer].author].avatarURL}\n                    />\n                    <h3 className=\"mb-3 text-left\">Would you rather...</h3>\n\n                    <p className=\"mb-4 h5 text-center\">\n                      ...{questions[answer].optionOne.text}...\n                      <br />\n                    </p>\n                    <p className=\"mb-4 text-center\">\n                      <span className=\"bg-dark text-white text-center p-2 mt-5\">\n                        OR\n                      </span>\n                    </p>\n                    <div className=\"d-flex align-items-center pt-5 mt-auto\">\n                      <div className=\"text-left\">\n                        <a href=\"./profile.html\" className=\"text-default\">\n                          {users[questions[answer].author].name}\n                        </a>{\" \"}\n                        asked\n                        <small className=\"d-block text-muted\">\n                          {humantime(questions[answer].timestamp)}\n                        </small>\n                      </div>\n                      <div className=\"ml-auto text-muted\">\n                        <Link\n                          to={{\n                            pathname: `/question/${questions[answer].id}`,\n                            state: {\n                              type:\n                                this.state.questionList === UNANSWERED\n                                  ? POLL\n                                  : RESULTS\n                            }\n                          }}\n                        >\n                          <Button color=\"primary\" size=\"md\">\n                            Answer\n                          </Button>\n                        </Link>\n                      </div>\n                    </div>\n                  </Card.Body>\n                </Card>\n              </Grid.Col>\n            ))}\n          </Grid.Row>\n        </Page.Content>\n      </SiteWrapper>\n    );\n  }\n}\n\nfunction mapStateToProps({ authedUser, users, questions }) {\n  let answered, unanswered;\n  const sort = (a, b) => {\n    return (\n      new Date(questions[b].timestamp).getTime() -\n      new Date(questions[a].timestamp).getTime()\n    );\n  };\n  if (authedUser) {\n    answered = Object.keys(users[authedUser].answers).sort(sort);\n    unanswered = Object.keys(Object.assign({}, questions)).sort(sort);\n    answered.map(\n      answer =>\n        (unanswered = unanswered.filter(unanswered => answer !== unanswered))\n    );\n  }\n  return {\n    authedUser,\n    users,\n    questions,\n    answered,\n    unanswered\n  };\n}\nexport default withRouter(connect(mapStateToProps)(Home));\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Badge, Table, Avatar, Card, Text } from \"tabler-react\";\n\n// Components\nimport SiteWrapper from \"./SiteWrapper\";\n\nconst LeaderBoard = props => {\n  let { users } = props;\n\n  return (\n    <SiteWrapper>\n      <Card>\n        <Card.Header>\n          <Card.Title>Leaderboard</Card.Title>\n        </Card.Header>\n        <Table\n          cards={true}\n          striped={true}\n          responsive={true}\n          className=\"table-vcenter\"\n        >\n          <Table.Header>\n            <Table.Row>\n              <Table.ColHeader alignContent=\"center\">Score</Table.ColHeader>\n              <Table.ColHeader colSpan={2}>User</Table.ColHeader>\n              <Table.ColHeader alignContent=\"center\">\n                Answered Questions\n              </Table.ColHeader>\n              <Table.ColHeader alignContent=\"center\">\n                Created Questions\n              </Table.ColHeader>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {users.map(user => (\n              <Table.Row key={user.id}>\n                <Table.Col alignContent=\"center\">\n                  <Badge color=\"warning\">\n                    <Text className=\"h4 my-0 mx-1\">{user.score}</Text>\n                  </Badge>\n                </Table.Col>\n                <Table.Col className=\"w-1\">\n                  <Avatar imageURL={user.avatarURL} />\n                </Table.Col>\n                <Table.Col>{user.name}</Table.Col>\n                <Table.Col alignContent=\"center\">\n                  {Object.keys(user.answers).length}\n                </Table.Col>\n                <Table.Col alignContent=\"center\">\n                  {user.questions.length}\n                </Table.Col>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      </Card>\n    </SiteWrapper>\n  );\n};\n\nfunction mapStateToProps({ users, authedUser }) {\n  // Make a new user object so that users doesn't get overwritten.\n  let userObj = Object.assign({}, users);\n  Object.values(users).map(\n    user =>\n      (userObj[user.id][\"score\"] =\n        Object.keys(user.answers).length + user.questions.length)\n  );\n  return {\n    // Create an array of users, sorted by score\n    users: Object.values(userObj).sort((a, b) => {\n      if (a.score < b.score) {\n        return 1;\n      } else if (a.score > b.score) {\n        return -1;\n      } else {\n        return 0;\n      }\n    }),\n    authedUser\n  };\n}\n\nexport default connect(mapStateToProps)(LeaderBoard);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Form } from \"tabler-react\";\nimport { handleSaveQuestionAnswer } from \"../actions/shared\";\n\nclass QuestionAnswer extends Component {\n  state = {\n    option: \"none\",\n    showAlert: false\n  };\n\n  handleChange(e) {\n    this.setState({\n      option: e.target.value,\n      showAlert: false\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const { option } = this.state;\n    const { dispatch, question } = this.props;\n\n    this.state.option === \"none\"\n      ? this.setState({ showAlert: true })\n      : dispatch(handleSaveQuestionAnswer(question.id, option));\n  }\n\n  render() {\n    const { question } = this.props;\n\n    return (\n      <form\n        onChange={e => this.handleChange(e)}\n        onSubmit={e => this.handleSubmit(e)}\n      >\n        <Form.Group label=\"Choose one option\">\n          {this.state.showAlert && (\n            <small className=\"text-danger p-4\">\n              * Please select one option\n            </small>\n          )}\n          <Form.SwitchStack>\n            <Form.Switch\n              label={question.optionOne.text}\n              name=\"choice\"\n              type=\"radio\"\n              value=\"optionOne\"\n            />\n            <Form.Switch\n              label={question.optionTwo.text}\n              name=\"choice\"\n              type=\"radio\"\n              value=\"optionOne\"\n            />\n          </Form.SwitchStack>\n        </Form.Group>\n        <Button\n          className=\"btn-primary btn-block\"\n          type=\"submit\"\n          value=\"Submit Answer\"\n        >\n          Submit Answer\n        </Button>\n      </form>\n    );\n  }\n}\n\nexport default connect()(QuestionAnswer);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Text, Progress } from \"tabler-react\";\n\nclass QuestionResult extends Component {\n  render() {\n    const { authedUser, question } = this.props;\n\n    const { optionOne, optionTwo } = question;\n    const totalVotes = optionOne.votes.length + optionTwo.votes.length;\n    const selected = optionOne.votes.includes(authedUser);\n\n    return (\n      <div className=\"question-results text-left\">\n        <div className={`question-result mb-4 ${selected}`}>\n          <div className=\"clearfix\">\n            <div className=\"float-left\">\n              <strong>\n                {((optionOne.votes.length / totalVotes) * 100).toFixed(0)}%\n              </strong>\n            </div>\n            <div className=\"float-right\">\n              <Text.Small muted>\n                {optionOne.votes.length} out of {totalVotes} votes\n              </Text.Small>\n            </div>\n          </div>\n          <Progress size=\"md\">\n            <Progress.Bar\n              color=\"yellow\"\n              width={((optionOne.votes.length / totalVotes) * 100).toFixed(0)}\n            />\n          </Progress>\n          <h4>{optionOne.text}</h4>\n        </div>\n        <div className={`question-result mb-4 ${!selected}`}>\n          <div className=\"clearfix\">\n            <div className=\"float-left\">\n              <strong>\n                {((optionTwo.votes.length / totalVotes) * 100).toFixed(0)}%\n              </strong>\n            </div>\n            <div className=\"float-right\">\n              <Text.Small muted>\n                {optionTwo.votes.length} out of {totalVotes} votes\n              </Text.Small>\n            </div>\n          </div>\n          <Progress size=\"md\">\n            <Progress.Bar\n              color=\"yellow\"\n              width={((optionTwo.votes.length / totalVotes) * 100).toFixed(0)}\n            />\n          </Progress>\n          <h4>{optionTwo.text}</h4>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect()(QuestionResult);\n","import React, { Component } from \"react\";\nimport { Error404Page } from \"tabler-react\";\nimport SiteWrapper from \"./SiteWrapper\";\n\nclass NoMatch extends Component {\n  render() {\n    return (\n      <SiteWrapper>\n        <Error404Page />\n      </SiteWrapper>\n    );\n  }\n}\nexport default NoMatch;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Page, Card, Text } from \"tabler-react\";\nimport ReactTimeAgo from \"react-time-ago\";\n\nimport QuestionAnswer from \"./QuestionAnswer\";\nimport QuestionResult from \"./QuestionResult\";\nimport NoMatch from \"./NoMatch\";\nimport SiteWrapper from \"./SiteWrapper\";\n\nfunction humantime(myTimestamp) {\n  return <ReactTimeAgo date={myTimestamp} />;\n}\n\nclass Question extends Component {\n  render() {\n    const { authedUser, users, question } = this.props;\n\n    if (!question) {\n      return <NoMatch />;\n    }\n\n    const questionAnswered = Object.keys(users[authedUser].answers).includes(\n      question.id\n    );\n\n    return (\n      <SiteWrapper>\n        <Page.Content>\n          <Card className=\"card card-profile\">\n            <div className=\"card-header bg-dark text-center\">\n              <Text className=\"h3 text-white mx-auto mb-5\">\n                {users[question.author].name}\n              </Text>\n            </div>\n            <Card.Body className=\"card-body text-center\">\n              <img\n                alt={\"Avatar of \" + users[question.author].name}\n                className=\"card-profile-img\"\n                src={users[question.author].avatarURL}\n              />\n              <h3 className=\"mb-3 text-left\">Would you rather...</h3>\n              {questionAnswered ? (\n                <QuestionResult\n                  question={question}\n                  author={users[question.author]}\n                  authedUser={authedUser}\n                />\n              ) : (\n                <QuestionAnswer\n                  question={question}\n                  author={users[question.author]}\n                />\n              )}\n              <div className=\"d-flex align-items-center pt-5 mt-auto\">\n                <div className=\"text-left\">\n                  <a href=\"./profile.html\" className=\"text-default\">\n                    {users[question.author].name}\n                  </a>{\" \"}\n                  asked\n                  <small className=\"d-block text-muted\">\n                    {humantime(question.timestamp)}\n                  </small>\n                </div>\n\n                {questionAnswered && (\n                  <div className=\"ml-auto text-muted\">\n                    <Link to={\"/\"}>\n                      <Button\n                        color=\"primary\"\n                        size=\"md\"\n                        icon=\"arrow-left-circle\"\n                        outline\n                      >\n                        Return to Homepage\n                      </Button>\n                    </Link>\n                  </div>\n                )}\n              </div>\n            </Card.Body>\n          </Card>\n        </Page.Content>\n      </SiteWrapper>\n    );\n  }\n}\n\nconst mapStateToProps = ({ authedUser, users, questions }, props) => ({\n  authedUser,\n  users,\n  question: questions[props.match.params.id]\n});\n\nexport default connect(mapStateToProps)(Question);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { Button, Card, Form, Grid, Text } from \"tabler-react\";\n\nimport { handleAddQuestion } from \"../actions/shared\";\n\n// Components\nimport SiteWrapper from \"./SiteWrapper\";\n\nclass QuestionNew extends Component {\n  state = {\n    optionOneText: \"\",\n    optionTwoText: \"\",\n    redirect: false\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const { optionOneText, optionTwoText } = this.state;\n    const { addQuestion } = this.props;\n\n    addQuestion(optionOneText, optionTwoText);\n\n    this.setState({ redirect: true });\n  };\n\n  render() {\n    const { avatarURL, authedUserName } = this.props;\n    const { optionOneText, optionTwoText, redirect } = this.state;\n\n    if (redirect) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return (\n      <SiteWrapper>\n        <Grid.Row>\n          <Grid.Col lg={12}>\n            <Card className=\"card card-profile\">\n              <div className=\"card-header bg-dark text-center\">\n                <Text className=\"h3 text-white mx-auto mb-5\">\n                  {authedUserName}\n                </Text>\n              </div>\n              <Card.Body className=\"text-center\">\n                <img\n                  alt={\"Avatar of \" + authedUserName}\n                  className=\"card-profile-img\"\n                  src={avatarURL}\n                />\n                <h3 className=\"mb-3 text-left\">Would you rather...</h3>\n                <form onSubmit={this.handleSubmit}>\n                  <Form.Group>\n                    <Form.Input\n                      name=\"example-text-input\"\n                      placeholder=\"Option one...\"\n                      onChange={e =>\n                        this.setState({ optionOneText: e.target.value })\n                      }\n                    />\n                    <Text className=\"bg-blue-lightest font-weight-bold text-center p-2 mt-5\">\n                      or\n                    </Text>\n                    <Form.Input\n                      className=\"mt-4\"\n                      name=\"example-text-input\"\n                      placeholder=\"Option two...\"\n                      onChange={e =>\n                        this.setState({ optionTwoText: e.target.value })\n                      }\n                    />\n                  </Form.Group>\n                  <Button\n                    className=\"btn-block\"\n                    color=\"primary\"\n                    size=\"md\"\n                    type=\"submit\"\n                    disabled={optionOneText === \"\" || optionTwoText === \"\"}\n                  >\n                    Ask Question\n                  </Button>\n                </form>\n              </Card.Body>\n            </Card>\n          </Grid.Col>\n        </Grid.Row>\n      </SiteWrapper>\n    );\n  }\n}\n\nconst mapStateToProps = ({ authedUser, users }) => ({\n  authedUserName: users[authedUser].name,\n  avatarURL: users[authedUser].avatarURL\n});\nconst mapDispatchToProps = dispatch => ({\n  addQuestion: (one, two) => dispatch(handleAddQuestion(one, two))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(QuestionNew);\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setAuthedUser } from \"../actions/authedUser\";\nimport { Grid, Form, Button, Text, Page } from \"tabler-react\";\nimport logo from \"../assets/logo.svg\";\n\nclass Login extends Component {\n  state = {\n    authedUser: \"\"\n  };\n\n  changeUser = event => {\n    this.setState({ authedUser: event.target.value });\n  };\n\n  authorizeUser = () => {\n    this.props.dispatch(setAuthedUser(this.state.authedUser));\n\n    let prevRouterPath =\n      this.props.location.state !== undefined\n        ? this.props.location.state.previous.pathname\n        : null;\n    prevRouterPath\n      ? this.props.history.push(prevRouterPath)\n      : this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { users } = this.props;\n    return (\n      <Page className=\"page-single\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <Grid.Col className=\"col-login mx-auto\">\n              <div className=\"text-center mb-6\">\n                <img alt=\"Would You Rather\" src={logo} className=\"h-6\" />\n              </div>\n              <Form className=\"card\" autoComplete=\"off\">\n                <div className=\"card-body p-6\">\n                  <div className=\"card-title h6 text-center\">\n                    Login to your account\n                  </div>\n                  <Form.Group label=\"Select User\">\n                    <Form.Select\n                      value={this.state.authedUser}\n                      onChange={this.changeUser}\n                    >\n                      <option default disabled defaultValue value=\"\">\n                        Select User\n                      </option>\n                      {users.map(user => (\n                        <option key={user.id} value={user.id}>\n                          {user.name}\n                        </option>\n                      ))}\n                    </Form.Select>\n                  </Form.Group>\n                  <Button\n                    block\n                    type=\"button\"\n                    color=\"primary\"\n                    onClick={this.authorizeUser}\n                  >\n                    Login\n                  </Button>\n                </div>\n              </Form>\n              <Text center=\"true\" muted=\"true\">\n                Select a user from above and click the login button.\n              </Text>\n            </Grid.Col>\n          </div>\n        </div>\n      </Page>\n    );\n  }\n}\n\nfunction mapStateToProps({ authedUser, users }) {\n  return {\n    users: Object.values(users),\n    authedUser: authedUser\n  };\n}\n\nexport default withRouter(connect(mapStateToProps)(Login));\n","import React, { Component, Fragment } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport { handleInitialData } from \"../actions/shared\";\n\nimport Home from \"./Home\";\nimport Leaderboard from \"./Leaderboard\";\nimport Question from \"./Question\";\nimport QuestionNew from \"./QuestionNew\";\nimport Login from \"./Login\";\nimport NoMatch from \"./NoMatch\";\n\nlet loggedIn = false;\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props => (loggedIn === true ? <Component {...props} /> : <Login />)}\n  />\n);\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.dispatch(handleInitialData());\n  }\n\n  render() {\n    loggedIn = this.props.loggedIn;\n    return (\n      <Router>\n        <Fragment>\n          {!this.props.loading && (\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/login\" component={Login} />\n              <PrivateRoute exact path=\"/add\" component={QuestionNew} />\n              <PrivateRoute exact path=\"/leaderboard\" component={Leaderboard} />\n              <PrivateRoute exact path=\"/question/:id\" component={Question} />\n              <Route render={() => <NoMatch />} />\n            </Switch>\n          )}\n        </Fragment>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = ({ questions, authedUser }) => ({\n  loading: questions === null,\n  loggedIn: authedUser !== null\n});\n\nexport default connect(mapStateToProps)(App);\n","import {\n  RECEIVE_USERS,\n  ADD_QUESTION_TO_AUTHED_USER,\n  SAVE_QUESTION_ANSWER_TO_AUTHED_USER\n} from \"../actions/actionTypes\";\n\nfunction users(state = {}, action) {\n  switch (action.type) {\n    case RECEIVE_USERS:\n      return {\n        ...state,\n        ...action.users\n      };\n    case ADD_QUESTION_TO_AUTHED_USER:\n      const { authedUser, id } = action;\n      return {\n        ...state,\n        [authedUser]: {\n          ...state[authedUser],\n          questions: state[authedUser].questions.concat(id)\n        }\n      };\n    case SAVE_QUESTION_ANSWER_TO_AUTHED_USER:\n      const { answer } = action;\n      return {\n        ...state,\n        [action.authedUser]: {\n          ...state[action.authedUser],\n          answers: {\n            ...state[action.authedUser].answers,\n            [action.id]: answer\n          }\n        }\n      };\n    default:\n      return state;\n  }\n}\n\nexport default users;\n","import {\n  RECEIVE_QUESTIONS,\n  ADD_QUESTION,\n  SAVE_QUESTION_ANSWER\n} from \"../actions/actionTypes\";\n\nfunction questions(state = {}, action) {\n  const { type, question, id, answer, authedUser } = action;\n  switch (type) {\n    case RECEIVE_QUESTIONS:\n      return {\n        ...state,\n        ...action.questions\n      };\n    case ADD_QUESTION:\n      return {\n        ...state,\n        [question.id]: question\n      };\n    case SAVE_QUESTION_ANSWER:\n      return {\n        ...state,\n        [id]: {\n          ...state[id],\n          [answer]: {\n            ...state[id][answer],\n            votes: state[id][answer].votes.concat(authedUser)\n          }\n        }\n      };\n    default:\n      return state;\n  }\n}\n\nexport default questions;\n","import { combineReducers } from \"redux\";\nimport authedUser from \"./authedUser\";\nimport users from \"./users\";\nimport questions from \"./questions\";\n\nexport default combineReducers({\n  authedUser,\n  users,\n  questions\n});\n","import { SET_AUTHED_USER } from \"../actions/actionTypes\";\n\nexport default function authedUser(state = null, action) {\n  switch (action.type) {\n    case SET_AUTHED_USER:\n      return action.id;\n    default:\n      return state;\n  }\n}\n","const logger = store => next => action => {\n  console.group(action.type);\n  console.log(\"The action: \", action);\n  const returnValue = next(action);\n  console.log(\"The new state: \", store.getState());\n  console.groupEnd();\n  return returnValue;\n};\n\nexport default logger;\n","import thunk from \"redux-thunk\";\nimport logger from \"./logger\";\nimport { applyMiddleware } from \"redux\";\n\nexport default applyMiddleware(thunk, logger);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"tabler-react/dist/Tabler.css\";\n\nimport App from \"./components/App\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\n\nimport reducer from \"./reducers\";\nimport middleware from \"./middleware\";\nimport JavascriptTimeAgo from \"javascript-time-ago\";\n\n// The desired locales.\nimport en from \"javascript-time-ago/locale/en\";\n\n// Initialize the desired locales.\nJavascriptTimeAgo.locale(en);\n\nconst store = createStore(reducer, middleware);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}